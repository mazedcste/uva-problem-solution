#include <bits/stdc++.h>
using namespace std;
#define check(p,pos) ((bool)(p & (1<<pos)))
int status[200000100/32];
void bitsieve () {
   int i, j, sqrtN, n;
   int N = 20000000; //Limit of prime number..
   sqrtN = int(sqrt(N) );
   status[0] = 3;   //for 0 1 position for number 0 and 1. here 1 for not prime.. :)
   for (i = 4; i <= N; i += 2) {
      status[i/32] |= (1 << (i %32));
   }
   for( i = 3; i <= sqrtN; i += 2 ) {
      if( check(status[i/32],i%32)==0) {
         for( j = i*i; j <= N; j += 2*i ) {
            status[j/32] |= (1 << (j %32));
         }
      }
   }
   //print any range from 0 to 20000000.. :)
}
int main ()
{
   int twinpri[500000];
   bitsieve();
   int n = 0, q, x;
   for (int i = 3; i <= 20000000; i+=2) {
      if (check(status[i/32], i%32)==0) {
         int j = i+2;
         if (check(status[j/32], j%32)==0) twinpri[++n] = i;
      }
   }
   //printf ("total twin prime: %d\n", n);
   while (scanf (" %d", &x) == 1)
      printf ("(%d, %d)\n", twinpri[x], twinpri[x]+2);
   return 0;
}

